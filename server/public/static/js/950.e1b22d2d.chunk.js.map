{"version":3,"file":"static/js/950.e1b22d2d.chunk.js","mappings":"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","sources":["../node_modules/@graphiql/codemirror-graphql/esm/utils/getTypeInfo.js","../node_modules/@graphiql/codemirror-graphql/esm/utils/SchemaReference.js","../node_modules/@graphiql/codemirror-graphql/esm/utils/forEachState.js","../node_modules/@graphiql/codemirror-graphql/esm/utils/jump-addon.js","../node_modules/@graphiql/codemirror-graphql/esm/jump.js"],"sourcesContent":["import { isCompositeType, getNullableType, getNamedType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, } from 'graphql';\nimport { SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, } from 'graphql/type/introspection';\nimport forEachState from './forEachState';\nexport default function getTypeInfo(schema, tokenState) {\n    const info = {\n        schema,\n        type: null,\n        parentType: null,\n        inputType: null,\n        directiveDef: null,\n        fieldDef: null,\n        argDef: null,\n        argDefs: null,\n        objectFieldDefs: null,\n    };\n    forEachState(tokenState, (state) => {\n        var _a, _b;\n        switch (state.kind) {\n            case 'Query':\n            case 'ShortQuery':\n                info.type = schema.getQueryType();\n                break;\n            case 'Mutation':\n                info.type = schema.getMutationType();\n                break;\n            case 'Subscription':\n                info.type = schema.getSubscriptionType();\n                break;\n            case 'InlineFragment':\n            case 'FragmentDefinition':\n                if (state.type) {\n                    info.type = schema.getType(state.type);\n                }\n                break;\n            case 'Field':\n            case 'AliasedField':\n                info.fieldDef =\n                    info.type && state.name\n                        ? getFieldDef(schema, info.parentType, state.name)\n                        : null;\n                info.type = (_a = info.fieldDef) === null || _a === void 0 ? void 0 : _a.type;\n                break;\n            case 'SelectionSet':\n                info.parentType = info.type ? getNamedType(info.type) : null;\n                break;\n            case 'Directive':\n                info.directiveDef = state.name ? schema.getDirective(state.name) : null;\n                break;\n            case 'Arguments':\n                const parentDef = state.prevState\n                    ? state.prevState.kind === 'Field'\n                        ? info.fieldDef\n                        : state.prevState.kind === 'Directive'\n                            ? info.directiveDef\n                            : state.prevState.kind === 'AliasedField'\n                                ? state.prevState.name &&\n                                    getFieldDef(schema, info.parentType, state.prevState.name)\n                                : null\n                    : null;\n                info.argDefs = parentDef ? parentDef.args : null;\n                break;\n            case 'Argument':\n                info.argDef = null;\n                if (info.argDefs) {\n                    for (let i = 0; i < info.argDefs.length; i++) {\n                        if (info.argDefs[i].name === state.name) {\n                            info.argDef = info.argDefs[i];\n                            break;\n                        }\n                    }\n                }\n                info.inputType = (_b = info.argDef) === null || _b === void 0 ? void 0 : _b.type;\n                break;\n            case 'EnumValue':\n                const enumType = info.inputType ? getNamedType(info.inputType) : null;\n                info.enumValue =\n                    enumType instanceof GraphQLEnumType\n                        ? find(enumType.getValues(), val => val.value === state.name)\n                        : null;\n                break;\n            case 'ListValue':\n                const nullableType = info.inputType\n                    ? getNullableType(info.inputType)\n                    : null;\n                info.inputType =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            case 'ObjectValue':\n                const objectType = info.inputType ? getNamedType(info.inputType) : null;\n                info.objectFieldDefs =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            case 'ObjectField':\n                const objectField = state.name && info.objectFieldDefs\n                    ? info.objectFieldDefs[state.name]\n                    : null;\n                info.inputType = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                break;\n            case 'NamedType':\n                info.type = state.name ? schema.getType(state.name) : null;\n                break;\n        }\n    });\n    return info;\n}\nfunction getFieldDef(schema, type, fieldName) {\n    if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n        return SchemaMetaFieldDef;\n    }\n    if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n        return TypeMetaFieldDef;\n    }\n    if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n        return TypeNameMetaFieldDef;\n    }\n    if (type && type.getFields) {\n        return type.getFields()[fieldName];\n    }\n}\nfunction find(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i])) {\n            return array[i];\n        }\n    }\n}\n//# sourceMappingURL=getTypeInfo.js.map","import { getNamedType } from 'graphql';\nexport function getFieldReference(typeInfo) {\n    return {\n        kind: 'Field',\n        schema: typeInfo.schema,\n        field: typeInfo.fieldDef,\n        type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n    };\n}\nexport function getDirectiveReference(typeInfo) {\n    return {\n        kind: 'Directive',\n        schema: typeInfo.schema,\n        directive: typeInfo.directiveDef,\n    };\n}\nexport function getArgumentReference(typeInfo) {\n    return typeInfo.directiveDef\n        ? {\n            kind: 'Argument',\n            schema: typeInfo.schema,\n            argument: typeInfo.argDef,\n            directive: typeInfo.directiveDef,\n        }\n        : {\n            kind: 'Argument',\n            schema: typeInfo.schema,\n            argument: typeInfo.argDef,\n            field: typeInfo.fieldDef,\n            type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n        };\n}\nexport function getEnumValueReference(typeInfo) {\n    return {\n        kind: 'EnumValue',\n        value: typeInfo.enumValue || undefined,\n        type: typeInfo.inputType\n            ? getNamedType(typeInfo.inputType)\n            : undefined,\n    };\n}\nexport function getTypeReference(typeInfo, type) {\n    return {\n        kind: 'Type',\n        schema: typeInfo.schema,\n        type: type || typeInfo.type,\n    };\n}\nfunction isMetaField(fieldDef) {\n    return fieldDef.name.slice(0, 2) === '__';\n}\n//# sourceMappingURL=SchemaReference.js.map","export default function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state === null || state === void 0 ? void 0 : state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\n//# sourceMappingURL=forEachState.js.map","import CodeMirror from 'codemirror';\nCodeMirror.defineOption('jump', false, (cm, options, old) => {\n    if (old && old !== CodeMirror.Init) {\n        const oldOnMouseOver = cm.state.jump.onMouseOver;\n        CodeMirror.off(cm.getWrapperElement(), 'mouseover', oldOnMouseOver);\n        const oldOnMouseOut = cm.state.jump.onMouseOut;\n        CodeMirror.off(cm.getWrapperElement(), 'mouseout', oldOnMouseOut);\n        CodeMirror.off(document, 'keydown', cm.state.jump.onKeyDown);\n        delete cm.state.jump;\n    }\n    if (options) {\n        const state = (cm.state.jump = {\n            options,\n            onMouseOver: onMouseOver.bind(null, cm),\n            onMouseOut: onMouseOut.bind(null, cm),\n            onKeyDown: onKeyDown.bind(null, cm),\n        });\n        CodeMirror.on(cm.getWrapperElement(), 'mouseover', state.onMouseOver);\n        CodeMirror.on(cm.getWrapperElement(), 'mouseout', state.onMouseOut);\n        CodeMirror.on(document, 'keydown', state.onKeyDown);\n    }\n});\nfunction onMouseOver(cm, event) {\n    const target = event.target || event.srcElement;\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n    if ((target === null || target === void 0 ? void 0 : target.nodeName) !== 'SPAN') {\n        return;\n    }\n    const box = target.getBoundingClientRect();\n    const cursor = {\n        left: (box.left + box.right) / 2,\n        top: (box.top + box.bottom) / 2,\n    };\n    cm.state.jump.cursor = cursor;\n    if (cm.state.jump.isHoldingModifier) {\n        enableJumpMode(cm);\n    }\n}\nfunction onMouseOut(cm) {\n    if (!cm.state.jump.isHoldingModifier && cm.state.jump.cursor) {\n        cm.state.jump.cursor = null;\n        return;\n    }\n    if (cm.state.jump.isHoldingModifier && cm.state.jump.marker) {\n        disableJumpMode(cm);\n    }\n}\nfunction onKeyDown(cm, event) {\n    if (cm.state.jump.isHoldingModifier || !isJumpModifier(event.key)) {\n        return;\n    }\n    cm.state.jump.isHoldingModifier = true;\n    if (cm.state.jump.cursor) {\n        enableJumpMode(cm);\n    }\n    const onKeyUp = (upEvent) => {\n        if (upEvent.code !== event.code) {\n            return;\n        }\n        cm.state.jump.isHoldingModifier = false;\n        if (cm.state.jump.marker) {\n            disableJumpMode(cm);\n        }\n        CodeMirror.off(document, 'keyup', onKeyUp);\n        CodeMirror.off(document, 'click', onClick);\n        cm.off('mousedown', onMouseDown);\n    };\n    const onClick = (clickEvent) => {\n        const { destination, options } = cm.state.jump;\n        if (destination) {\n            options.onClick(destination, clickEvent);\n        }\n    };\n    const onMouseDown = (_, downEvent) => {\n        if (cm.state.jump.destination) {\n            downEvent.codemirrorIgnore = true;\n        }\n    };\n    CodeMirror.on(document, 'keyup', onKeyUp);\n    CodeMirror.on(document, 'click', onClick);\n    cm.on('mousedown', onMouseDown);\n}\nconst isMac = typeof navigator !== 'undefined' &&\n    navigator &&\n    navigator.appVersion.includes('Mac');\nfunction isJumpModifier(key) {\n    return key === (isMac ? 'Meta' : 'Control');\n}\nfunction enableJumpMode(cm) {\n    if (cm.state.jump.marker) {\n        return;\n    }\n    const { cursor, options } = cm.state.jump;\n    const pos = cm.coordsChar(cursor);\n    const token = cm.getTokenAt(pos, true);\n    const getDestination = options.getDestination || cm.getHelper(pos, 'jump');\n    if (getDestination) {\n        const destination = getDestination(token, options, cm);\n        if (destination) {\n            const marker = cm.markText({ line: pos.line, ch: token.start }, { line: pos.line, ch: token.end }, { className: 'CodeMirror-jump-token' });\n            cm.state.jump.marker = marker;\n            cm.state.jump.destination = destination;\n        }\n    }\n}\nfunction disableJumpMode(cm) {\n    const { marker } = cm.state.jump;\n    cm.state.jump.marker = null;\n    cm.state.jump.destination = null;\n    marker.clear();\n}\n//# sourceMappingURL=jump-addon.js.map","import CodeMirror from 'codemirror';\nimport getTypeInfo from './utils/getTypeInfo';\nimport { getArgumentReference, getDirectiveReference, getEnumValueReference, getFieldReference, getTypeReference, } from './utils/SchemaReference';\nimport './utils/jump-addon';\nCodeMirror.registerHelper('jump', 'graphql', (token, options) => {\n    if (!options.schema || !options.onClick || !token.state) {\n        return;\n    }\n    const { state } = token;\n    const { kind, step } = state;\n    const typeInfo = getTypeInfo(options.schema, state);\n    if ((kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n        (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef)) {\n        return getFieldReference(typeInfo);\n    }\n    if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n        return getDirectiveReference(typeInfo);\n    }\n    if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n        return getArgumentReference(typeInfo);\n    }\n    if (kind === 'EnumValue' && typeInfo.enumValue) {\n        return getEnumValueReference(typeInfo);\n    }\n    if (kind === 'NamedType' && typeInfo.type) {\n        return getTypeReference(typeInfo);\n    }\n});\n//# sourceMappingURL=jump.js.map"],"names":["getTypeInfo","schema","tokenState","info","type","parentType","inputType","directiveDef","fieldDef","argDef","argDefs","objectFieldDefs","forEachState","state","_a","_b","kind","getQueryType","getMutationType","getSubscriptionType","getType","name","getFieldDef","getNamedType","getDirective","parentDef","prevState","args","i","length","enumType","enumValue","GraphQLEnumType","find","getValues","val","value","nullableType","getNullableType","GraphQLList","ofType","objectType","GraphQLInputObjectType","getFields","objectField","fieldName","SchemaMetaFieldDef","TypeMetaFieldDef","TypeNameMetaFieldDef","isCompositeType","array","predicate","getFieldReference","typeInfo","field","isMetaField","getDirectiveReference","directive","getArgumentReference","argument","getEnumValueReference","getTypeReference","slice","__name","stack","fn","reverseStateStack","push","onMouseOver","cm","event","target","srcElement","HTMLElement","nodeName","box","getBoundingClientRect","cursor","left","right","top","bottom","jump","isHoldingModifier","enableJumpMode","onMouseOut","marker","disableJumpMode","onKeyDown","isJumpModifier","key","onKeyUp","upEvent","code","CodeMirror","document","onClick","off","onMouseDown","clickEvent","destination","options","_","downEvent","codemirrorIgnore","on","old","oldOnMouseOver","getWrapperElement","oldOnMouseOut","bind","isMac","navigator","appVersion","includes","pos","coordsChar","token","getTokenAt","getDestination","getHelper","markText","line","ch","start","end","className","clear","step"],"sourceRoot":""}