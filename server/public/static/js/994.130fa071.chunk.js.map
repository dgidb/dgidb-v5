{"version":3,"file":"static/js/994.130fa071.chunk.js","mappings":"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","sources":["../node_modules/@graphiql/codemirror-graphql/esm/utils/forEachState.js","../node_modules/@graphiql/codemirror-graphql/esm/utils/hintList.js","../node_modules/@graphiql/codemirror-graphql/esm/variables/hint.js"],"sourcesContent":["export default function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state === null || state === void 0 ? void 0 : state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\n//# sourceMappingURL=forEachState.js.map","export default function hintList(cursor, token, list) {\n    const hints = filterAndSortList(list, normalizeText(token.string));\n    if (!hints) {\n        return;\n    }\n    const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n    return {\n        list: hints,\n        from: { line: cursor.line, ch: tokenStart },\n        to: { line: cursor.line, ch: token.end },\n    };\n}\nfunction filterAndSortList(list, text) {\n    if (!text) {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.text), text),\n        entry,\n    }));\n    const conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated);\n    const sortedMatches = conciseMatches.sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.text.length - b.entry.text.length);\n    return sortedMatches.map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replaceAll(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\n//# sourceMappingURL=hintList.js.map","import CodeMirror from 'codemirror';\nimport { getNullableType, getNamedType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLBoolean, } from 'graphql';\nimport forEachState from '../utils/forEachState';\nimport hintList from '../utils/hintList';\nCodeMirror.registerHelper('hint', 'graphql-variables', (editor, options) => {\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n    const results = getVariablesHint(cur, token, options);\n    if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n        results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n        results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n        CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n    return results;\n});\nfunction getVariablesHint(cur, token, options) {\n    const state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    const { kind, step } = state;\n    if (kind === 'Document' && step === 0) {\n        return hintList(cur, token, [{ text: '{' }]);\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return;\n    }\n    const typeInfo = getTypeInfo(variableToType, token.state);\n    if (kind === 'Document' || (kind === 'Variable' && step === 0)) {\n        const variableNames = Object.keys(variableToType);\n        return hintList(cur, token, variableNames.map(name => ({\n            text: `\"${name}\": `,\n            type: variableToType[name],\n        })));\n    }\n    if ((kind === 'ObjectValue' || (kind === 'ObjectField' && step === 0)) &&\n        typeInfo.fields) {\n        const inputFields = Object.keys(typeInfo.fields).map(fieldName => typeInfo.fields[fieldName]);\n        return hintList(cur, token, inputFields.map(field => ({\n            text: `\"${field.name}\": `,\n            type: field.type,\n            description: field.description,\n        })));\n    }\n    if (kind === 'StringValue' ||\n        kind === 'NumberValue' ||\n        kind === 'BooleanValue' ||\n        kind === 'NullValue' ||\n        (kind === 'ListValue' && step === 1) ||\n        (kind === 'ObjectField' && step === 2) ||\n        (kind === 'Variable' && step === 2)) {\n        const namedInputType = typeInfo.type\n            ? getNamedType(typeInfo.type)\n            : undefined;\n        if (namedInputType instanceof GraphQLInputObjectType) {\n            return hintList(cur, token, [{ text: '{' }]);\n        }\n        if (namedInputType instanceof GraphQLEnumType) {\n            const values = namedInputType.getValues();\n            return hintList(cur, token, values.map(value => ({\n                text: `\"${value.name}\"`,\n                type: namedInputType,\n                description: value.description,\n            })));\n        }\n        if (namedInputType === GraphQLBoolean) {\n            return hintList(cur, token, [\n                { text: 'true', type: GraphQLBoolean, description: 'Not false.' },\n                { text: 'false', type: GraphQLBoolean, description: 'Not true.' },\n            ]);\n        }\n    }\n}\nfunction getTypeInfo(variableToType, tokenState) {\n    const info = {\n        type: null,\n        fields: null,\n    };\n    forEachState(tokenState, state => {\n        switch (state.kind) {\n            case 'Variable': {\n                info.type = variableToType[state.name];\n                break;\n            }\n            case 'ListValue': {\n                const nullableType = info.type ? getNullableType(info.type) : undefined;\n                info.type =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            }\n            case 'ObjectValue': {\n                const objectType = info.type ? getNamedType(info.type) : undefined;\n                info.fields =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            }\n            case 'ObjectField': {\n                const objectField = state.name && info.fields ? info.fields[state.name] : null;\n                info.type = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                break;\n            }\n        }\n    });\n    return info;\n}\n//# sourceMappingURL=hint.js.map"],"names":["forEachState","stack","fn","reverseStateStack","state","kind","push","prevState","i","length","hintList","cursor","token","list","hints","filterAndSortList","normalizeText","string","tokenStart","type","test","start","end","from","line","ch","to","text","filterNonEmpty","entry","isDeprecated","map","proximity","getProximity","pair","sort","a","b","array","predicate","filtered","filter","toLowerCase","replaceAll","suggestion","lexicalDistance","indexOf","j","d","aLength","bLength","cost","Math","min","getVariablesHint","cur","options","step","variableToType","typeInfo","getTypeInfo","Object","keys","name","concat","fields","fieldName","field","description","namedInputType","getNamedType","GraphQLInputObjectType","GraphQLEnumType","getValues","value","GraphQLBoolean","tokenState","info","nullableType","getNullableType","GraphQLList","ofType","objectType","getFields","objectField","__name","CodeMirror","registerHelper","editor","getCursor","getTokenAt","results","Pos","signal"],"sourceRoot":""}