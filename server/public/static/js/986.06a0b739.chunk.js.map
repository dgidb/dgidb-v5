{"version":3,"file":"static/js/986.06a0b739.chunk.js","mappings":"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","sources":["../node_modules/node_modules/codemirror/addon/fold/foldcode.js","../node_modules/node_modules/codemirror/addon/fold/foldgutter.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function doFold(cm, pos, options, force) {\n    if (options && options.call) {\n      var finder = options;\n      options = null;\n    } else {\n      var finder = getOption(cm, options, \"rangeFinder\");\n    }\n    if (typeof pos == \"number\") pos = CodeMirror.Pos(pos, 0);\n    var minSize = getOption(cm, options, \"minFoldSize\");\n\n    function getRange(allowFolded) {\n      var range = finder(cm, pos);\n      if (!range || range.to.line - range.from.line < minSize) return null;\n      if (force === \"fold\") return range;\n\n      var marks = cm.findMarksAt(range.from);\n      for (var i = 0; i < marks.length; ++i) {\n        if (marks[i].__isFold) {\n          if (!allowFolded) return null;\n          range.cleared = true;\n          marks[i].clear();\n        }\n      }\n      return range;\n    }\n\n    var range = getRange(true);\n    if (getOption(cm, options, \"scanUp\")) while (!range && pos.line > cm.firstLine()) {\n      pos = CodeMirror.Pos(pos.line - 1, 0);\n      range = getRange(false);\n    }\n    if (!range || range.cleared || force === \"unfold\") return;\n\n    var myWidget = makeWidget(cm, options, range);\n    CodeMirror.on(myWidget, \"mousedown\", function(e) {\n      myRange.clear();\n      CodeMirror.e_preventDefault(e);\n    });\n    var myRange = cm.markText(range.from, range.to, {\n      replacedWith: myWidget,\n      clearOnEnter: getOption(cm, options, \"clearOnEnter\"),\n      __isFold: true\n    });\n    myRange.on(\"clear\", function(from, to) {\n      CodeMirror.signal(cm, \"unfold\", cm, from, to);\n    });\n    CodeMirror.signal(cm, \"fold\", cm, range.from, range.to);\n  }\n\n  function makeWidget(cm, options, range) {\n    var widget = getOption(cm, options, \"widget\");\n\n    if (typeof widget == \"function\") {\n      widget = widget(range.from, range.to);\n    }\n\n    if (typeof widget == \"string\") {\n      var text = document.createTextNode(widget);\n      widget = document.createElement(\"span\");\n      widget.appendChild(text);\n      widget.className = \"CodeMirror-foldmarker\";\n    } else if (widget) {\n      widget = widget.cloneNode(true)\n    }\n    return widget;\n  }\n\n  // Clumsy backwards-compatible interface\n  CodeMirror.newFoldFunction = function(rangeFinder, widget) {\n    return function(cm, pos) { doFold(cm, pos, {rangeFinder: rangeFinder, widget: widget}); };\n  };\n\n  // New-style interface\n  CodeMirror.defineExtension(\"foldCode\", function(pos, options, force) {\n    doFold(this, pos, options, force);\n  });\n\n  CodeMirror.defineExtension(\"isFolded\", function(pos) {\n    var marks = this.findMarksAt(pos);\n    for (var i = 0; i < marks.length; ++i)\n      if (marks[i].__isFold) return true;\n  });\n\n  CodeMirror.commands.toggleFold = function(cm) {\n    cm.foldCode(cm.getCursor());\n  };\n  CodeMirror.commands.fold = function(cm) {\n    cm.foldCode(cm.getCursor(), null, \"fold\");\n  };\n  CodeMirror.commands.unfold = function(cm) {\n    cm.foldCode(cm.getCursor(), { scanUp: false }, \"unfold\");\n  };\n  CodeMirror.commands.foldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"fold\");\n    });\n  };\n  CodeMirror.commands.unfoldAll = function(cm) {\n    cm.operation(function() {\n      for (var i = cm.firstLine(), e = cm.lastLine(); i <= e; i++)\n        cm.foldCode(CodeMirror.Pos(i, 0), { scanUp: false }, \"unfold\");\n    });\n  };\n\n  CodeMirror.registerHelper(\"fold\", \"combine\", function() {\n    var funcs = Array.prototype.slice.call(arguments, 0);\n    return function(cm, start) {\n      for (var i = 0; i < funcs.length; ++i) {\n        var found = funcs[i](cm, start);\n        if (found) return found;\n      }\n    };\n  });\n\n  CodeMirror.registerHelper(\"fold\", \"auto\", function(cm, start) {\n    var helpers = cm.getHelpers(start, \"fold\");\n    for (var i = 0; i < helpers.length; i++) {\n      var cur = helpers[i](cm, start);\n      if (cur) return cur;\n    }\n  });\n\n  var defaultOptions = {\n    rangeFinder: CodeMirror.fold.auto,\n    widget: \"\\u2194\",\n    minFoldSize: 0,\n    scanUp: false,\n    clearOnEnter: true\n  };\n\n  CodeMirror.defineOption(\"foldOptions\", null);\n\n  function getOption(cm, options, name) {\n    if (options && options[name] !== undefined)\n      return options[name];\n    var editorOptions = cm.options.foldOptions;\n    if (editorOptions && editorOptions[name] !== undefined)\n      return editorOptions[name];\n    return defaultOptions[name];\n  }\n\n  CodeMirror.defineExtension(\"foldOption\", function(options, name) {\n    return getOption(this, options, name);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"./foldcode\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"./foldcode\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"foldGutter\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.clearGutter(cm.state.foldGutter.options.gutter);\n      cm.state.foldGutter = null;\n      cm.off(\"gutterClick\", onGutterClick);\n      cm.off(\"changes\", onChange);\n      cm.off(\"viewportChange\", onViewportChange);\n      cm.off(\"fold\", onFold);\n      cm.off(\"unfold\", onFold);\n      cm.off(\"swapDoc\", onChange);\n    }\n    if (val) {\n      cm.state.foldGutter = new State(parseOptions(val));\n      updateInViewport(cm);\n      cm.on(\"gutterClick\", onGutterClick);\n      cm.on(\"changes\", onChange);\n      cm.on(\"viewportChange\", onViewportChange);\n      cm.on(\"fold\", onFold);\n      cm.on(\"unfold\", onFold);\n      cm.on(\"swapDoc\", onChange);\n    }\n  });\n\n  var Pos = CodeMirror.Pos;\n\n  function State(options) {\n    this.options = options;\n    this.from = this.to = 0;\n  }\n\n  function parseOptions(opts) {\n    if (opts === true) opts = {};\n    if (opts.gutter == null) opts.gutter = \"CodeMirror-foldgutter\";\n    if (opts.indicatorOpen == null) opts.indicatorOpen = \"CodeMirror-foldgutter-open\";\n    if (opts.indicatorFolded == null) opts.indicatorFolded = \"CodeMirror-foldgutter-folded\";\n    return opts;\n  }\n\n  function isFolded(cm, line) {\n    var marks = cm.findMarks(Pos(line, 0), Pos(line + 1, 0));\n    for (var i = 0; i < marks.length; ++i) {\n      if (marks[i].__isFold) {\n        var fromPos = marks[i].find(-1);\n        if (fromPos && fromPos.line === line)\n          return marks[i];\n      }\n    }\n  }\n\n  function marker(spec) {\n    if (typeof spec == \"string\") {\n      var elt = document.createElement(\"div\");\n      elt.className = spec + \" CodeMirror-guttermarker-subtle\";\n      return elt;\n    } else {\n      return spec.cloneNode(true);\n    }\n  }\n\n  function updateFoldInfo(cm, from, to) {\n    var opts = cm.state.foldGutter.options, cur = from - 1;\n    var minSize = cm.foldOption(opts, \"minFoldSize\");\n    var func = cm.foldOption(opts, \"rangeFinder\");\n    // we can reuse the built-in indicator element if its className matches the new state\n    var clsFolded = typeof opts.indicatorFolded == \"string\" && classTest(opts.indicatorFolded);\n    var clsOpen = typeof opts.indicatorOpen == \"string\" && classTest(opts.indicatorOpen);\n    cm.eachLine(from, to, function(line) {\n      ++cur;\n      var mark = null;\n      var old = line.gutterMarkers;\n      if (old) old = old[opts.gutter];\n      if (isFolded(cm, cur)) {\n        if (clsFolded && old && clsFolded.test(old.className)) return;\n        mark = marker(opts.indicatorFolded);\n      } else {\n        var pos = Pos(cur, 0);\n        var range = func && func(cm, pos);\n        if (range && range.to.line - range.from.line >= minSize) {\n          if (clsOpen && old && clsOpen.test(old.className)) return;\n          mark = marker(opts.indicatorOpen);\n        }\n      }\n      if (!mark && !old) return;\n      cm.setGutterMarker(line, opts.gutter, mark);\n    });\n  }\n\n  // copied from CodeMirror/src/util/dom.js\n  function classTest(cls) { return new RegExp(\"(^|\\\\s)\" + cls + \"(?:$|\\\\s)\\\\s*\") }\n\n  function updateInViewport(cm) {\n    var vp = cm.getViewport(), state = cm.state.foldGutter;\n    if (!state) return;\n    cm.operation(function() {\n      updateFoldInfo(cm, vp.from, vp.to);\n    });\n    state.from = vp.from; state.to = vp.to;\n  }\n\n  function onGutterClick(cm, line, gutter) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    if (gutter != opts.gutter) return;\n    var folded = isFolded(cm, line);\n    if (folded) folded.clear();\n    else cm.foldCode(Pos(line, 0), opts);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    state.from = state.to = 0;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() { updateInViewport(cm); }, opts.foldOnChangeTimeSpan || 600);\n  }\n\n  function onViewportChange(cm) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var opts = state.options;\n    clearTimeout(state.changeUpdate);\n    state.changeUpdate = setTimeout(function() {\n      var vp = cm.getViewport();\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        updateInViewport(cm);\n      } else {\n        cm.operation(function() {\n          if (vp.from < state.from) {\n            updateFoldInfo(cm, vp.from, state.from);\n            state.from = vp.from;\n          }\n          if (vp.to > state.to) {\n            updateFoldInfo(cm, state.to, vp.to);\n            state.to = vp.to;\n          }\n        });\n      }\n    }, opts.updateViewportTimeSpan || 400);\n  }\n\n  function onFold(cm, from) {\n    var state = cm.state.foldGutter;\n    if (!state) return;\n    var line = from.line;\n    if (line >= state.from && line < state.to)\n      updateFoldInfo(cm, line, line + 1);\n  }\n});\n"],"names":["CodeMirror","cm","pos","options","force","call","finder","getOption","Pos","minSize","allowFolded","range2","to","line","from","marks","findMarksAt","i","length","__isFold","cleared","clear","__name","range","getRange","firstLine","myWidget","makeWidget","on","e","myRange","e_preventDefault","markText","replacedWith","clearOnEnter","signal","widget","text","document","createTextNode","createElement","appendChild","className","cloneNode","newFoldFunction","rangeFinder","doFold","defineExtension","this","commands","toggleFold","foldCode","getCursor","fold","unfold","scanUp","foldAll","operation","lastLine","unfoldAll","registerHelper","funcs","Array","prototype","slice","arguments","start","found","helpers","getHelpers","cur","defaultOptions","auto","minFoldSize","name","editorOptions","foldOptions","defineOption","mod","require$$0","val","old","Init","clearGutter","state","foldGutter","gutter","off","onGutterClick","onChange","onViewportChange","onFold","State","parseOptions","updateInViewport","opts","indicatorOpen","indicatorFolded","findMarks","fromPos","find","spec","elt","foldOption","func","clsFolded","classTest","clsOpen","eachLine","mark","gutterMarkers","isFolded","test","marker","setGutterMarker","cls","RegExp","vp","getViewport","updateFoldInfo","folded","clearTimeout","changeUpdate","setTimeout","foldOnChangeTimeSpan","updateViewportTimeSpan"],"sourceRoot":""}