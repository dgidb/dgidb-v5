{"version":3,"file":"static/js/492.e5072ce6.chunk.js","mappings":"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","sources":["../node_modules/node_modules/codemirror/addon/edit/matchbrackets.js","../node_modules/node_modules/codemirror/addon/search/searchcursor.js","../node_modules/node_modules/codemirror/keymap/sublime.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined ||\n                            (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000,\n      highlightNonMatching = config && config.highlightNonMatching;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textarea whenever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  function clearHighlighted(cm) {\n    if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n      cm.state.matchBrackets.currentlyHighlighted();\n      cm.state.matchBrackets.currentlyHighlighted = null;\n    }\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clearHighlighted)\n      clearHighlighted(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clearHighlighted)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"names":["CodeMirror","ie_lt8","test","navigator","userAgent","document","documentMode","Pos","matching","config","bracketRegex","cm","where","line","getLineHandle","pos","ch","afterCursor","getWrapperElement","className","re","match","text","charAt","dir","strict","style","getTokenTypeAt","found","scanForBracket","from","to","forward","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","Math","min","lastLine","max","firstLine","lineNo","getLine","length","end","push","pop","autoclear","maxHighlightLen","state","matchBrackets","maxHighlightLineLength","highlightNonMatching","marks","ranges","listSelections","i","empty","findMatchingBracket","head","markText","focused","focus","clear","operation","i2","setTimeout","currentlyHighlighted","__name","defineOption","val","old","Init","off","doMatchBrackets","clearHighlighted","on","defineExtension","this","oldConfig","mod","require$$0","doFold","noFold","regexp","flags","ignoreCase","global","multiline","current","regexpFlags","target","indexOf","RegExp","source","doc","start","ensureFlags","last","lastIndex","string","exec","index","maybeMultiline","searchRegexpForward","chunk","curLine","before","slice","split","inside","startLine","startCh","endMargin","newMatch","first","lastMatchIn","searchRegexpBackward","chunkSize","orig","folded","foldFunc","mid","len","query","caseFold","fold","lines","search","adjustPos","cutFrom","endString","lastIndexOf","top","topString","options","atOccurrence","afterEmptyMatch","clipPos","matches","reverse","pos2","searchStringBackward","searchStringForward","searchRegexpBackwardMultiline","searchRegexpForwardMultiline","String","prototype","normalize","str","toLowerCase","SearchCursor","findNext","find","findPrevious","cmpPos","result","replace","newText","origin","splitLines","replaceRange","defineDocExtension","cur","getSearchCursor","getCursor","anchor","setSelections","cmds","commands","type","startPos","e","next","cat","isWordChar","toUpperCase","extendSelectionsBy","range","display","shift","extend","findPosSubword","above","isReadOnly","Pass","newSelection","at","indentLine","execCommand","word","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","goSubwordLeft","moveSubword","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","clientHeight","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLineAfter","insertLine","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","wordAt","getRange","isSelectedRange","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToPrevLine","addCursorToSelection","addCursorToNextLine","mirror","opening","closing","caseSensitive","direction","selected","toSort","ranges2","from2","to2","sort","a","b","au","bu","indices","replacements","replaceSelections","getTarget","selectScope","selectBetweenBrackets","goToBracket","puncType","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","duplicateLine","rangeCount","sortLines","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","sublimeBookmarks","prevBookmark","unshift","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","k","splice","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","modifyWordOrSelection","downcaseAtCursor","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findAndGoTo","findUnderPrevious","findAllUnder","primaryIndex","keyMap","macSublime","normalizeKeyMap","pcSublime","mac","default","macDefault","sublime","require$$1","require$$2"],"sourceRoot":""}