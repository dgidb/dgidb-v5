{"version":3,"file":"static/js/714.717b78d0.chunk.js","mappings":"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","sources":["../node_modules/node_modules/codemirror/addon/lint/lint.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n  var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain)\n      cm.getWrapperElement().appendChild(tt);\n    else\n      document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, conf, hasGutter) {\n    this.marked = [];\n    if (conf instanceof Function) conf = {getAnnotations: conf};\n    if (!conf || conf === true) conf = {};\n    this.options = {};\n    this.linterOptions = conf.options || {};\n    for (var prop in defaults) this.options[prop] = defaults[prop];\n    for (var prop in conf) {\n      if (defaults.hasOwnProperty(prop)) {\n        if (conf[prop] != null) this.options[prop] = conf[prop];\n      } else if (!conf.options) {\n        this.linterOptions[prop] = conf[prop];\n      }\n    }\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  var defaults = {\n    highlightLines: false,\n    tooltips: true,\n    delay: 500,\n    lintOnChange: true,\n    getAnnotations: null,\n    async: false,\n    selfContain: null,\n    formatAnnotation: null,\n    onUpdateLinting: null\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    if (state.options.highlightLines) clearErrorLines(cm);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function clearErrorLines(cm) {\n    cm.eachLine(function(line) {\n      var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n      if (has) cm.removeLineClass(line, \"wrap\", has[0]);\n    })\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, state.linterOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    clearMarks(cm);\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      // filter out duplicate messages\n      var message = [];\n      anns = anns.filter(function(item) { return message.indexOf(item.message) > -1 ? false : message.push(item.message) });\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n      // use original annotations[line] to show multiple messages\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1,\n                                                       options.tooltips));\n\n      if (options.highlightLines)\n        cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n      if (state.options.lintOnChange)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    startLinting(this);\n  });\n});\n"],"names":["CodeMirror","GUTTER_ID","LINT_LINE_ID","cm","e","content","tt","document","createElement","e2","parentNode","off","position","style","top","Math","max","clientY","offsetHeight","left","clientX","className","options","theme","appendChild","cloneNode","state","lint","selfContain","getWrapperElement","body","__name","on","opacity","elt","removeChild","rm","setTimeout","node","tooltip","showTooltip","hide","hideTooltip","poll","setInterval","n","nodeType","host","clearInterval","conf","hasGutter","prop","this","marked","Function","getAnnotations","linterOptions","defaults","hasOwnProperty","timeout","onMouseOver","waitingFor","highlightLines","tooltips","delay","lintOnChange","async","formatAnnotation","onUpdateLinting","clearGutter","clearErrorLines","i","length","clear","eachLine","line","has","wrapClass","exec","removeLineClass","labels","severity","multiple","marker","inner","showTooltipFor","a","b","annotations","lines","ann","from","push","tip","messageHTML","innerHTML","createTextNode","message","id","abort","getValue","arg2","operation","updateLinting","getHelper","Pos","lintAsync","then","issues","annotationsNotSorted","clearMarks","groupByLine","anns","filter","item","indexOf","maxSeverity","tipLabel","createDocumentFragment","getMaxSeverity","annotationTooltip","to","markText","__annotation","setGutterMarker","makeMarker","addLineClass","clearTimeout","startLinting","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","popupTooltips","defineOption","val","old","Init","onChange","gutters","getOption","hasLintGutter","LintState","defineExtension","mod","require$$0"],"sourceRoot":""}