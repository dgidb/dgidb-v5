name: Deploy server
on:
  push:
    branches:
      - main
      - staging
      - dev
  workflow_dispatch:
jobs:
  get_environment:
    name: get deployment environment
    runs-on: ubuntu-latest
    steps:
      - id: branch_check
        run: |
          echo "running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::prod"
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "::set-output name=env_name::staging"
          elif [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "::set-output name=env_name::dev"
          else
            exit 1  # shouldn't be possible
          fi
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
  deploy:
    name: deploy server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v2
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: dgidb
          environment_name: dgidb-${{ needs.get_environment.outputs.env_name }}-env
          version_label: $GITHUB_SHA
          region: us-east-2
          deployment_package: deploy.zip

