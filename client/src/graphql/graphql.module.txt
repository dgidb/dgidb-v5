// import { ApolloClientOptions, InMemoryCache } from '@apollo/client/core';
// import { relayStylePagination, concatPagination } from '@apollo/client/utilities';
// import { PossibleTypesMap, TypePolicies, TypePolicy } from '@apollo/client/cache';
// import { DgidbTypePolicies } from  './graphql.type-policies';
// import { HttpLink } from '@apollo/client';

// const uri = 'http://127.0.0.1:3000'; // <-- add the URL of the GraphQL server here

// const typePolicies: TypePolicies = DgidbTypePolicies;

// export function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {
//   return {
//     link: httpLink.create({ uri: uri, withCredentials: true }),
//     cache: new InMemoryCache({
//       possibleTypes: introspectionToPossibleTypes(result),
//       typePolicies: typePolicies
//     }),
//     defaultOptions: {
//       watchQuery: {
//         fetchPolicy: 'cache-first',
//         errorPolicy: 'all',
//         notifyOnNetworkStatusChange: false,
//       },
//     },
//   };
// }

// @NgModule({
//   providers: [
//     {
//       provide: APOLLO_OPTIONS,
//       useFactory: createApollo,
//       deps: [HttpLink],
//     },
//   ],
// })
// export class GraphQLModule {}

// /**
//  * Extracts `PossibleTypesMap` as accepted by `@apollo/client` from GraphQL introspection query result. From: https://github.com/apollographql/apollo-client/issues/6855
//  */
// const introspectionToPossibleTypes = (
//   introspectionResultData: IntrospectionResultData
// ): PossibleTypesMap => {
//   const possibleTypes: PossibleTypesMap = {};

//   introspectionResultData.__schema.types.forEach((supertype) => {
//     if (supertype.possibleTypes) {
//       possibleTypes[supertype.name] = supertype.possibleTypes.map((subtype) => {
//         return subtype.name;
//       });
//     }
//   });

//   return possibleTypes;
// };

// export default introspectionToPossibleTypes;